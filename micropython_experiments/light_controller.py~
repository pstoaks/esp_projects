# This file is executed on every boot (including wake-boot from deepsleep)
#import esp
#esp.osdebug(None)
#import webrepl
#webrepl.start()
import time
import machine
import neopixel

"""Class for controlling WS2812B lights

Args:
    pin (int): Microcontroller pin to use
    count (int): Count of LEDs in string
"""
class LightController(object):
    self.Blue = (0, 0, 255)
    self.Red = (255, 0, 0)
    self.Green = (0, 255, 0)
    self.White = (255,255,255)
    self.Off = (0, 0, 0)
    
    def __init__(self, pin, count):
        self._pin = pin
        self._light_count = count
        self._pixel_object = neopixel.NeoPixel(machine.Pin(self.pin), self.count)
        self.pixel_object.show();

    """Simple function for dimming lights

    Args:
        *args (one or more ints): Dim each of these lights
    """
    def dim_lights(self, *args):
        for light in *args:
            self._pixel_object[light] = (50, 50, 50)

    def create_sine(self, *args):
        # might be difficult to do without taylor series
        return

    def bouncer(self, val_in):
        if val_in < self._light_count and val_in >= 0:
            val_out = val_in
        elif val_in >= 0:
            val_out = (self._light_count - val_in) + self._light_count
        else:
            val_out = -1
        return val_out

    """Propagates a blue and red wave down the led string

    Args:
        step_time (int): How long in milliseconds to wait before moving
                         on to the next light change
    """
    def propagate_wave(self, step_time):
        start_light = 0
        for light_index in range(0, self._light_count):
            time.sleep(step_time/1000)
            start_light += 1
            red_range = start_light - 3
            blue_range = start_light - 6

            for initial_index in range(blue_range, start_light):
                red_index = self.bouncer(initial_index + 3)
                blue_index = self.bouncer(initial_index)
                self.pixel_object[red_index] = self.Red
                self.pixel_object[blue_index] = self.Blue

            self._pixel_object.write()

controller = LightController(5, 64)
controller.propagate_wave(250)

            
                
        
